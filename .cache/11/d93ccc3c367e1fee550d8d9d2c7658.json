{"id":"js/shader/fragment.glsl","dependencies":[{"name":"C:\\Apache24\\htdocs\\THREEJS-Template\\package.json","includedInParent":true,"mtime":1606714352527}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D t1,t2;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nfloat PI = 3.141592653589793238;\\nvoid main()\\t{\\n\\tvec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\n  vec4 i1 = texture2D(t1,newUV);\\n  vec4 i2 = texture2D(t2,newUV);\\n  float dist = distance(i1,i2)/2.;\\n  // vec4 final = mix(i1,i2,progress);\\n\\n  // test below awesome effect\\n  // dist = newUV.x + 0.1*sin(newUV.y*10. + time);\\n\\n  float pr = step(dist,progress);\\n\\n  vec4 final = mix(\\n    mix(i1,i2,pr),\\n    i2,\\n    pr\\n  );\\n\\n  // gl_FragColor = vec4(pr);\\n  gl_FragColor = final;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":683},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D t1,t2;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nfloat PI = 3.141592653589793238;\\nvoid main()\\t{\\n\\tvec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\n  vec4 i1 = texture2D(t1,newUV);\\n  vec4 i2 = texture2D(t2,newUV);\\n  float dist = distance(i1,i2)/2.;\\n  // vec4 final = mix(i1,i2,progress);\\n\\n  // test below awesome effect\\n  // dist = newUV.x + 0.1*sin(newUV.y*10. + time);\\n\\n  float pr = step(dist,progress);\\n\\n  vec4 final = mix(\\n    mix(i1,i2,pr),\\n    i2,\\n    pr\\n  );\\n\\n  // gl_FragColor = vec4(pr);\\n  gl_FragColor = final;\\n}\";"},"lineCount":null}},"error":null,"hash":"ba01af47940fa45c772b5498167dcaf1","cacheData":{"env":{}}}